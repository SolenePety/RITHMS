% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_microbiomes.R
\name{get_microbiomes}
\alias{get_microbiomes}
\title{Useful function to extract microbiomes from RITHMS output}
\usage{
get_microbiomes(data, transpose = F, CLR = F)
}
\arguments{
\item{data}{List corresponding to one generation, as returned by \code{holo_simu()}. Containing simulation output.}

\item{transpose}{Logical; if \code{TRUE}, transpose the microbiome matrix (OTUs in rows, individuals in columns).}

\item{CLR}{Logical; if \code{TRUE}, applies a CLR transformation to the abundance data. This transformation requires \code{transpose = TRUE}.}
}
\value{
A \code{data.frame}containing the microbiome abundances of individuals. Default, individuals are in rows and OTUs in columns. Change \code{transpose}parameter if needed.
}
\description{
The gets functions use the output of \code{\link[=holo_simu]{holo_simu()}} to extract the information of interest from a given generation.
\code{get_microbiomes} extract the microbiome abundance matrix from a generation object, with or without CLR transformation or transposition.
}
\examples{
library(magrittr)
library(purrr)
datafile <- system.file("DeruPop.rds", package = "RITHMS")
ToyData <- readRDS(datafile)
taxa_assign_g <- assign_taxa(founder_object = ToyData)
generations_simu <- holo_simu(h2 = 0.25, b2 = 0.25, founder_object = ToyData,
                              n_clust = taxa_assign_g, n_ind = 500,
                              verbose = FALSE, seed = 1234)

# Extract microbiome matrix for G1 generation
G1_microbiome <- get_microbiomes(generations_simu$G1)

# Extract with transposition
G1_t_microbiome <- get_microbiomes(generations_simu$G1, transpose = TRUE)

# Extract with CLR transformation
G1_CLR_microbiome <- get_microbiomes(generations_simu$G1, transpose = TRUE, CLR = TRUE)

# Extract all microbiome matrices of all generations
# substract metadata
microbiomes <- generations_simu[-1] \%>\% map(get_microbiomes)

library(magrittr)
library(purrr)

datafile <- system.file("DeruPop.rds", package = "RITHMS")
ToyData <- readRDS(datafile)
taxa_assign_g <- assign_taxa(founder_object = ToyData)
generations_simu <- holo_simu(h2 = 0.25,
                              b2 = 0.25,
                              founder_object = ToyData,
                              n_clust = taxa_assign_g,
                              n_ind = 500,
                              verbose = FALSE,
                              noise.microbiome = 0.5,
                              effect.size = 0.3,
                              lambda = 0.5,
                              dir = TRUE,
                              selection = FALSE,
                              seed = 1234)

# To extract CLR abundances of the G1 generation microbiome
G1_microbiome <- get_microbiomes(generations_simu$G1, CLR = TRUE)

# To extract all the relative abundances of microbiomes from all generations
# substract metadata
microbiomes <- generations_simu[-1] \%>\% map(get_microbiomes)

# To extract mean phenotypes of all generations
mean_phenotypes <- generations_simu[-1] \%>\% map(get_mean_phenotypes)

# To extract phenotypic values for each individual of generation G1
G1_phenotypes_values <- get_phenotypes_value(generations_simu$G1)

# To extract the phenotype of each generation as the combined effects of microbiota and direct genetic effects
phenotypes <- generations_simu[-1] \%>\% map(get_phenotypes)

# To extract omega beta G values for each individual of generation G1
G1_om_beta_g <- get_om_beta_g(generations_simu$G1)

# To extract ID of selected individuals to each generation
selected_inds <- generations_simu[-1] \%>\% map(get_selected_ind) 

# To extract Shannon diversity
# First step, compute richness from abundances
richness_from_abundances <- generations_simu[-1] \%>\% map(get_microbiomes) \%>\% map(richness_from_abundances_gen)
shannon_diversity <- richness_from_abundances \%>\% map(get_mean_diversity)
}
\seealso{
\code{\link[=get_mean_phenotypes]{get_mean_phenotypes()}}, \code{\link[=get_phenotypes_value]{get_phenotypes_value()}}, \code{\link[=get_om_beta_g]{get_om_beta_g()}}, \code{\link[=get_selected_ind]{get_selected_ind()}}, \code{\link[=get_phenotypes]{get_phenotypes()}}
}
